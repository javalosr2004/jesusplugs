
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."carts" (
    "id" bigint NOT NULL,
    "item_sku" "text",
    "quantity" integer DEFAULT 0,
    "customer_id" bigint
);

ALTER TABLE "public"."carts" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."customers" (
    "id" bigint NOT NULL,
    "customer_name" "text" DEFAULT '""'::"text" NOT NULL,
    "character_class" "text" DEFAULT '""'::"text",
    "level" integer DEFAULT 0,
    "visit_time" timestamp with time zone DEFAULT ("now"() AT TIME ZONE 'utc'::"text")
);

ALTER TABLE "public"."customers" OWNER TO "postgres";

ALTER TABLE "public"."customers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."carts_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."global_inventory" (
    "id" bigint NOT NULL,
    "gold" integer DEFAULT 0 NOT NULL,
    "num_potions" integer DEFAULT 0 NOT NULL,
    "num_orders" integer DEFAULT 0,
    "num_ml" integer DEFAULT 0,
    "num_green_ml" integer DEFAULT 0,
    "num_blue_ml" integer DEFAULT 0,
    "num_red_ml" integer DEFAULT 0,
    "num_green_potions" integer DEFAULT 0,
    "num_blue_potions" integer DEFAULT 0,
    "num_red_potions" integer DEFAULT 0
);

ALTER TABLE "public"."global_inventory" OWNER TO "postgres";

ALTER TABLE "public"."global_inventory" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."global_inventory_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."global_inventory_temp" (
    "id" bigint NOT NULL,
    "gold" integer DEFAULT 100 NOT NULL,
    "red_ml" integer DEFAULT 0 NOT NULL,
    "green_ml" integer DEFAULT 0 NOT NULL,
    "blue_ml" integer DEFAULT 0 NOT NULL,
    "dark_ml" integer DEFAULT 0 NOT NULL
);

ALTER TABLE "public"."global_inventory_temp" OWNER TO "postgres";

ALTER TABLE "public"."global_inventory_temp" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."global_inventory_temp_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."inventory" (
    "attribute" "text" NOT NULL
);

ALTER TABLE "public"."inventory" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."inventory_ledger" (
    "id" bigint NOT NULL,
    "time" timestamp with time zone DEFAULT "now"() NOT NULL,
    "attribute" "text" NOT NULL,
    "change" integer DEFAULT 0 NOT NULL
);

ALTER TABLE "public"."inventory_ledger" OWNER TO "postgres";

ALTER TABLE "public"."inventory_ledger" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."inventory_ledger_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."carts" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."potion_carts_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."potion_ledger" (
    "id" bigint NOT NULL,
    "time" timestamp with time zone DEFAULT "now"() NOT NULL,
    "change" integer NOT NULL,
    "potion_sku" "text" NOT NULL
);

ALTER TABLE "public"."potion_ledger" OWNER TO "postgres";

ALTER TABLE "public"."potion_ledger" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."potion_ledger_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."potions" (
    "red" integer DEFAULT 0 NOT NULL,
    "green" integer DEFAULT 0 NOT NULL,
    "blue" integer DEFAULT 0 NOT NULL,
    "dark" integer DEFAULT 0 NOT NULL,
    "quantity" integer DEFAULT 0 NOT NULL,
    "price" integer DEFAULT 50 NOT NULL,
    "potion_sku" "text" NOT NULL,
    "name" "text"
);

ALTER TABLE "public"."potions" OWNER TO "postgres";

ALTER TABLE ONLY "public"."customers"
    ADD CONSTRAINT "carts_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."global_inventory"
    ADD CONSTRAINT "global_inventory_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."global_inventory_temp"
    ADD CONSTRAINT "global_inventory_temp_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."inventory_ledger"
    ADD CONSTRAINT "inventory_ledger_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."inventory"
    ADD CONSTRAINT "inventory_pkey" PRIMARY KEY ("attribute");

ALTER TABLE ONLY "public"."carts"
    ADD CONSTRAINT "potion_carts_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."potion_ledger"
    ADD CONSTRAINT "potion_ledger_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."potions"
    ADD CONSTRAINT "potions_pkey" PRIMARY KEY ("potion_sku");

ALTER TABLE ONLY "public"."potions"
    ADD CONSTRAINT "potions_potion_sku_key" UNIQUE ("potion_sku");

ALTER TABLE ONLY "public"."inventory_ledger"
    ADD CONSTRAINT "inventory_ledger_attribute_fkey" FOREIGN KEY ("attribute") REFERENCES "public"."inventory"("attribute") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."potion_ledger"
    ADD CONSTRAINT "potion_ledger_potion_sku_fkey" FOREIGN KEY ("potion_sku") REFERENCES "public"."potions"("potion_sku") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."carts"
    ADD CONSTRAINT "public_items_cart_item_sku_fkey" FOREIGN KEY ("item_sku") REFERENCES "public"."potions"("potion_sku");

ALTER TABLE ONLY "public"."carts"
    ADD CONSTRAINT "public_potion_carts_customer_id_fkey" FOREIGN KEY ("customer_id") REFERENCES "public"."customers"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "public"."carts" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."customers" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."global_inventory" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."global_inventory_temp" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."inventory" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."inventory_ledger" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."potion_ledger" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."potions" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."carts" TO "anon";
GRANT ALL ON TABLE "public"."carts" TO "authenticated";
GRANT ALL ON TABLE "public"."carts" TO "service_role";

GRANT ALL ON TABLE "public"."customers" TO "anon";
GRANT ALL ON TABLE "public"."customers" TO "authenticated";
GRANT ALL ON TABLE "public"."customers" TO "service_role";

GRANT ALL ON SEQUENCE "public"."carts_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."carts_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."carts_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."global_inventory" TO "anon";
GRANT ALL ON TABLE "public"."global_inventory" TO "authenticated";
GRANT ALL ON TABLE "public"."global_inventory" TO "service_role";

GRANT ALL ON SEQUENCE "public"."global_inventory_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."global_inventory_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."global_inventory_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."global_inventory_temp" TO "anon";
GRANT ALL ON TABLE "public"."global_inventory_temp" TO "authenticated";
GRANT ALL ON TABLE "public"."global_inventory_temp" TO "service_role";

GRANT ALL ON SEQUENCE "public"."global_inventory_temp_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."global_inventory_temp_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."global_inventory_temp_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."inventory" TO "anon";
GRANT ALL ON TABLE "public"."inventory" TO "authenticated";
GRANT ALL ON TABLE "public"."inventory" TO "service_role";

GRANT ALL ON TABLE "public"."inventory_ledger" TO "anon";
GRANT ALL ON TABLE "public"."inventory_ledger" TO "authenticated";
GRANT ALL ON TABLE "public"."inventory_ledger" TO "service_role";

GRANT ALL ON SEQUENCE "public"."inventory_ledger_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."inventory_ledger_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."inventory_ledger_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."potion_carts_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."potion_carts_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."potion_carts_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."potion_ledger" TO "anon";
GRANT ALL ON TABLE "public"."potion_ledger" TO "authenticated";
GRANT ALL ON TABLE "public"."potion_ledger" TO "service_role";

GRANT ALL ON SEQUENCE "public"."potion_ledger_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."potion_ledger_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."potion_ledger_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."potions" TO "anon";
GRANT ALL ON TABLE "public"."potions" TO "authenticated";
GRANT ALL ON TABLE "public"."potions" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
